// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Naturistic.Infrastructure.DLA;

#nullable disable

namespace Naturistic.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Naturistic.Core.Entities.BroadcastUser", b =>
                {
                    b.Property<int>("BroadcastUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BroadcastUserId"));

                    b.Property<string>("IdentityUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BroadcastUserId");

                    b.ToTable("BroadcastUsers");
                });

            modelBuilder.Entity("Naturistic.Core.Entities.Chat", b =>
                {
                    b.Property<int>("ChatId")
                        .HasColumnType("int");

                    b.Property<int>("BroadcastUserRefId")
                        .HasColumnType("int");

                    b.HasKey("ChatId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("Naturistic.Core.Entities.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChatId")
                        .HasColumnType("int");

                    b.Property<long>("SenderId")
                        .HasColumnType("bigint");

                    b.Property<string>("SenderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderNameColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("MessageId");

                    b.HasIndex("ChatId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Naturistic.Core.Entities.ViewerUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("ChatId")
                        .HasColumnType("int");

                    b.Property<string>("IdentityUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.ToTable("ViewerUsers");
                });

            modelBuilder.Entity("Naturistic.Core.Entities.Chat", b =>
                {
                    b.HasOne("Naturistic.Core.Entities.BroadcastUser", "BroadcastUser")
                        .WithOne("Chat")
                        .HasForeignKey("Naturistic.Core.Entities.Chat", "ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BroadcastUser");
                });

            modelBuilder.Entity("Naturistic.Core.Entities.Message", b =>
                {
                    b.HasOne("Naturistic.Core.Entities.Chat", null)
                        .WithMany("Messages")
                        .HasForeignKey("ChatId");

                    b.HasOne("Naturistic.Core.Entities.ViewerUser", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Naturistic.Core.Entities.ViewerUser", b =>
                {
                    b.HasOne("Naturistic.Core.Entities.Chat", null)
                        .WithMany("Channels")
                        .HasForeignKey("ChatId");
                });

            modelBuilder.Entity("Naturistic.Core.Entities.BroadcastUser", b =>
                {
                    b.Navigation("Chat");
                });

            modelBuilder.Entity("Naturistic.Core.Entities.Chat", b =>
                {
                    b.Navigation("Channels");

                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
